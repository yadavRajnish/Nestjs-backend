generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model area {
  area_id     Int       @id @default(autoincrement())
  name        String    @db.VarChar(100)
  alpha_code  String    @db.VarChar(10)
  city_id     Int
  created_on  DateTime? @default(now()) @db.Timestamp(0)
  created_by  Int
  modified_on DateTime? @db.Timestamp(0)
  modified_by Int?
  is_active   Boolean?  @default(true)
  is_deleted  Boolean?  @default(false)
}

model city {
  city_id     Int       @id @default(autoincrement())
  name        String    @default("") @db.VarChar(255)
  state_id    Int
  country_id  Int
  created_on  DateTime? @default(now()) @db.Timestamp(0)
  created_by  Int
  modified_on DateTime? @db.Timestamp(0)
  modified_by Int?
  is_active   Boolean?  @default(true)
  is_deleted  Boolean?  @default(false)
}

model country {
  country_id  Int       @id @default(autoincrement())
  name        String    @db.VarChar(100)
  alpha_2     String?   @default("") @db.Char(2)
  alpha_3     String?   @default("") @db.Char(3)
  phone_code  Int?      @default(0)
  created_on  DateTime? @default(now()) @db.Timestamp(0)
  created_by  Int
  modified_on DateTime? @db.Timestamp(0)
  modified_by Int?
  is_active   Boolean?  @default(true)
  is_deleted  Boolean?  @default(false)
}

model dropdowns {
  dropdowns_id    Int      @id @default(autoincrement())
  type            String?  @db.VarChar(200)
  value           String?  @db.VarChar(90)
  display_value   String?  @db.VarChar(90)
  is_default      String?  @db.VarChar(10)
  depth           String?  @db.VarChar(10)
  parent_type     String?  @db.VarChar(28)
  sequence_number String?  @db.VarChar(3)
  created_on      String?  @db.VarChar(50)
  created_by      Int?
  modified_by     Int?
  modified_on     String?  @db.VarChar(50)
  is_deleted      Boolean? @default(false)
}

model employee {
  employee_id Int       @default(autoincrement())
  name        String    @db.VarChar(100)
  email       String?   @unique(map: "email") @db.VarChar(20)
  phone       Int?
  locality_id Int
  created_on  DateTime? @default(now()) @db.Timestamp(0)
  created_by  Int
  modified_on DateTime? @db.Timestamp(0)
  modified_by Int?
  is_active   Boolean?  @default(true)
  is_deleted  Boolean?  @default(false)

  @@id([employee_id, locality_id])
}

model locality {
  locality_id Int       @id @default(autoincrement())
  name        String    @db.VarChar(100)
  alpha_code  String    @db.VarChar(10)
  area_id     Int
  created_on  DateTime? @default(now()) @db.Timestamp(0)
  created_by  Int
  modified_on DateTime? @db.Timestamp(0)
  modified_by Int?
  is_active   Boolean?  @default(true)
  is_deleted  Boolean?  @default(false)
}

model state {
  state_id    Int       @id @default(autoincrement())
  name        String    @db.VarChar(100)
  alpha_code  String    @db.VarChar(10)
  country_id  Int
  created_on  DateTime? @default(now()) @db.Timestamp(0)
  created_by  Int
  modified_on DateTime? @db.Timestamp(0)
  modified_by Int?
  is_active   Boolean?  @default(true)
  is_deleted  Boolean?  @default(false)
}

model user {
  user_id     Int       @id @default(autoincrement())
  first_name  String    @default("") @db.VarChar(50)
  last_name   String    @default("") @db.VarChar(50)
  email_id    String    @default("") @db.VarChar(50)
  mobile_no   String?   @db.VarChar(15)
  created_on  DateTime? @default(now()) @db.Timestamp(0)
  created_by  Int       @default(0)
  modified_on DateTime? @db.Timestamp(0)
  modified_by Int?
  is_deleted  Boolean?  @default(false)
}

model user_log {
  user_id     Int       @id @unique(map: "user_id_UNIQUE") @default(autoincrement())
  username    String?   @db.VarChar(50)
  password    String?   @db.VarChar(255)
  role        String?   @db.VarChar(50)
  employee_id Int?
  created_on  DateTime? @default(now()) @db.Timestamp(0)
  created_by  Int
  modified_on DateTime? @db.Timestamp(0)
  modified_by Int?
  is_active   Boolean?  @default(true)
  is_deleted  Boolean?  @default(false)
}

model user_login {
  user_login_id Int       @id @default(autoincrement())
  user_id       Int
  username      String?   @unique(map: "username") @db.VarChar(50)
  password      String    @db.VarChar(255)
  role          String    @db.VarChar(50)
  created_on    DateTime? @default(now()) @db.Timestamp(0)
  created_by    Int
  modified_on   DateTime? @db.Timestamp(0)
  modified_by   Int?
  is_deleted    Boolean?  @default(false)
}
